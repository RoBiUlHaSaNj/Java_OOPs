What is  OOP ?
A Computer programming model that organizes software design arounf data or object ,rather  than function and  logic.
Object-Oriented Programming (OOP) is a paradigm that models real-world entities as objects. This approach is designed to make complex systems easier to understand and manage by structuring code in a way that mirrors real-world interactions. 
we  can use C++,Java ,Python and many more 
Key Concepts of Object-Oriented Programming (OOP):
Class
Object
Inheritance
Polymorphism
Abstraction
Encapsulation


###   Simple OOPs Code   ##

// Define a class
class Dog {
    // Attributes (Instance variables)
    String name;
    String breed;
    int age;

    // Constructor
    Dog(String name, String breed, int age) {
        this.name = name;
        this.breed = breed;
        this.age = age;
    }

    // Method to display dog's details
    void displayDetails() {
        System.out.println("Name: " + name);
        System.out.println("Breed: " + breed);
        System.out.println("Age: " + age + " years old");
    }

    // Method to simulate barking
    void bark() {
        System.out.println(name + " is barking!");
    }
}

public class Main {
    public static void main(String[] args) {
        // Create an object of the Dog class
        Dog myDog = new Dog("Buddy", "Golden Retriever", 3);

        // Call methods on the object
        myDog.displayDetails();
        myDog.bark();
    }
}

Explanation:
Class Definition: The Dog class is defined with attributes name, breed, and age to represent the properties of a dog.
Constructor: A constructor Dog(String name, String breed, int age) is provided to initialize the attributes when creating an object.
Methods:
displayDetails(): Prints the dog's details.
bark(): Simulates the dog barking.
Object Creation: In the Main class, an object myDog is created using the Dog class, and the methods displayDetails() and bark() are called to interact with the object.
This simple example demonstrates the basic concepts of OOP: classes, objects, attributes, methods, and how to use them.
